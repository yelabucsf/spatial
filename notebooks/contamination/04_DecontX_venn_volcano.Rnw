\documentclass{article}

\begin{document}

This script performs differential expression analysis using the decontaminated data,
(1) between tumor cells and hepatocytes, and (2) between tumor and non-tumor regions
in hepatocytes. 

The Venn diagrams and the volcano plot are generated. 

<<package>>=
library(tidyverse)
library(loomR)
library(Seurat)
library(ggrepel)
@

<<data>>=
setwd("~/Documents/projects/spatial-genomics")
lfile <- connect(filename = "./data/all_batches_concat.loom", mode = "r+", skip.validate = TRUE)

cell_names <- lfile[["col_attrs/obs_names"]][]
cell_names <- make.names(cell_names, allow_ = F)

cell_types <- lfile[["col_attrs/CellType"]][]
batch <- lfile[["col_attrs/batch"]][]
tissue <- lfile[["col_attrs/tissue"]][]
barcode <- lfile[["col_attrs/barcode"]][]
n_counts <- as.numeric(lfile[["col_attrs/n_counts"]][])

# full_matrix <- lfile[["matrix"]][, ]
# colnames(full_matrix) <- lfile[["row_attrs/var_names"]][]
# rownames(full_matrix) <- cell_names

decont_mat <- read.csv("./decontam/decont_mat/decont_mat_after_v2.csv", row.names = 1)
dim(decont_mat) # 55287 genes, 10280 cells (the 59 contaminated genes were removed)
cells_decont <- colnames(decont_mat)
cells_decont <- make.names(cells_decont, allow_ = F)
# sum(cell_names == cells_decont) # 10280
gene_names <- rownames(decont_mat)
raw_obs <- as.data.frame(cbind(barcode, cell_names, cell_types, batch, tissue, n_counts))
@

<<>>=
# map (X, Y) coordinates
plate23_map <- read.csv("./data/plate23_map.csv", header=FALSE)
colnames(plate23_map) <- c("barcode", "X", "Y")
obs_xy <- merge(raw_obs, plate23_map, by = "barcode")
obs_xy$Y_hex <- obs_xy$Y - (obs_xy$X %% 2) / 2
obs_xy$location <- paste0(obs_xy$batch, "_", obs_xy$X, "_", obs_xy$Y_hex)
# filter the gene expression data
mat_filter_raw <- decont_mat[grep("mm10", rownames(decont_mat)), ]
dim(mat_filter_raw) # 24917 genes by 10280 cells
mat_filter <- mat_filter_raw[which(rowSums(mat_filter_raw) != 0), which(colSums(mat_filter_raw) != 0)]
dim(mat_filter) # 23554 genes by 10276 cells

# filtering genes with larger than 100 counts in target cells (hepatocytes and tumor cells in all the regions)

# identify tumor and hepatocyte cells in all the regions
target_cell <- raw_obs[raw_obs$cell_types %in% c("Hepatocyte", "mc38"), "cell_names"]
length(target_cell) # 5732

gene_to_filter <- rowSums(mat_filter[, colnames(mat_filter) %in% target_cell]) >= 101 
sum(gene_to_filter) # 10095 genes

mat_genefilter <- mat_filter[which(gene_to_filter), ] # 10095 genes by 10276 cells
dim(mat_genefilter)
# normalize gene expression data
# multiplied each entry by (median / current_sum) so that the sum across the row is equal to the median.
med_sum <- median(as.numeric(raw_obs$n_counts)) # 1050
# med_sum <- median(rowSums(mat_genefilter)) #median of the sum of counts across the cells
mat_normalized_t <- apply(mat_genefilter, 2, function(i) i * med_sum / sum(i))
mat_normalized <- t(mat_normalized_t)
# sum(rowSums(mat_normalized) == med_sum)
rm(mat_normalized_t, mat_filter, mat_filter_raw, mat_genefilter, raw_obs, plate23_map)
dim(mat_normalized) # 10276 cells by 10095 genes (normalized across all the cells)
@

# Differential expression analysis between tumor cells and hepatocytes:

<<>>=
mat_tumor_hepato <- mat_normalized[rownames(mat_normalized) %in% target_cell, ]
dim(mat_tumor_hepato) # 5732 tumor or hepatocyte cells in all the regions, by 10095 genes

# create seurat object
tumor_cell <- obs_xy[obs_xy$cell_types == "mc38", "cell_names"]
length(tumor_cell) # 2897 tumor cells
metadata <- data.frame("cell_names" = rownames(mat_tumor_hepato),
                       "cell_types" = rep("hepato", nrow(mat_tumor_hepato)))
metadata[metadata$cell_names %in% tumor_cell, "cell_types"] <- rep("tumor", length(tumor_cell))
table(metadata$cell_types)
# hepato  tumor 
# 2835   2897
rownames(metadata) <- metadata$cell_names
metadata <- metadata %>% select(cell_types)

seq_seurat_tumor_hepato <- CreateSeuratObject(counts = t(mat_tumor_hepato), 
                                 project = "liver", 
                                 meta.data = metadata,
                                 names.delim = "-")
dim(seq_seurat_tumor_hepato) # 10095 genes by 5732 cells
seq_seurat_tumor_hepato@active.ident <- as.factor(seq_seurat_tumor_hepato$cell_types)
table(seq_seurat_tumor_hepato@active.ident)

diff_features_tumor_hepato <- FindMarkers(seq_seurat_tumor_hepato, 
                                          ident.1 = "tumor", ident.2 = "hepato", 
                                          min.pct = 0)
dim(diff_features_tumor_hepato)
# 9724 rows
diff_features_tumor_hepato$p_adj_BH <- p.adjust(diff_features_tumor_hepato$p_val, 
                                                method = "BH", 
                                                n = nrow(diff_features_tumor_hepato))
sig_markers_tumor_hepato <- rownames(diff_features_tumor_hepato[diff_features_tumor_hepato$p_adj_BH < 0.05, ])
length(sig_markers_tumor_hepato)
# 8397 marker genes

new_tumor_gene <- rownames(diff_features_tumor_hepato[diff_features_tumor_hepato$avg_logFC > 0 & 
                                                        diff_features_tumor_hepato$p_adj_BH < 0.05, ])
new_hepato_gene <- rownames(diff_features_tumor_hepato[diff_features_tumor_hepato$avg_logFC < 0 & 
                                                         diff_features_tumor_hepato$p_adj_BH < 0.05, ])
length(new_tumor_gene)
length(new_hepato_gene)
# new: 4114 genes upregulated in tumor, 4283 genes upregulated in hepatocytes
@

# Differential expression analysis of hepatocytes between tumor and non-tumor regions. 

<<>>=
mat_hepato <- mat_tumor_hepato[rownames(mat_tumor_hepato) %in% obs_xy[obs_xy$cell_types == "Hepatocyte", "cell_names"], ]

well_xy <- as.data.frame(unique(cbind(obs_xy$batch, obs_xy$X, obs_xy$Y, 
                                      obs_xy$Y_hex, obs_xy$location)))
colnames(well_xy) <- c("batch", "X", "Y", "Y_hex", "location")
nrow(well_xy) # 2029 unique wells

well_xy$perc_tumor <- rep(NA, nrow(well_xy))
for(i in 1:nrow(well_xy)){ # for each well
  # find all the six neighboring well, if any
  seven_well_loc <- c(paste0(well_xy[i, "batch"], "_", well_xy[i, "X"], "_", 
                             well_xy[i, "Y_hex"]), 
                      paste0(well_xy[i, "batch"], "_", well_xy[i, "X"], "_", 
                             (as.numeric(well_xy[i, "Y_hex"]) + 1)),
                      paste0(well_xy[i, "batch"], "_", well_xy[i, "X"], "_", 
                             as.numeric(well_xy[i, "Y_hex"]) - 1), 
                      paste0(well_xy[i, "batch"], "_", 
                             as.numeric(well_xy[i, "X"]) + 1, "_", 
                             as.numeric(well_xy[i, "Y_hex"]) + 1/2),
                      paste0(well_xy[i, "batch"], "_", 
                             as.numeric(well_xy[i, "X"]) + 1, "_", 
                             as.numeric(well_xy[i, "Y_hex"]) - 1/2),
                      paste0(well_xy[i, "batch"], "_", 
                             as.numeric(well_xy[i, "X"]) - 1, "_", 
                             as.numeric(well_xy[i, "Y_hex"]) + 1/2),
                      paste0(well_xy[i, "batch"], "_", 
                             as.numeric(well_xy[i, "X"]) - 1, "_", 
                             as.numeric(well_xy[i, "Y_hex"]) - 1/2))
  # count the total number of cells, and tumor cells
  seven_well_cell_types <- obs_xy[obs_xy$location %in% seven_well_loc, "cell_types"]
  # calculate the tumor percent, and decide whether this well is in the tumor region
  well_xy[i, "perc_tumor"] <- sum(seven_well_cell_types == "mc38") / length(seven_well_cell_types) 
}

obs_xy_label <- obs_xy %>%
  left_join(well_xy[, c("location", "perc_tumor")], by = "location")

meta_obs <- obs_xy_label[obs_xy_label$cell_names %in% rownames(mat_hepato), ]
summary(meta_obs[, "perc_tumor"])
perc_tumor_thres <- mean(meta_obs[, "perc_tumor"])
meta_obs <- meta_obs %>%
  mutate(tumor_or_not = case_when(perc_tumor > perc_tumor_thres ~ "tumor_region",
                                  TRUE ~ "non_tumor")) %>%
  slice(match(rownames(mat_hepato), cell_names))
table(meta_obs$tumor_or_not)
rownames(meta_obs) <- meta_obs$cell_names

# create seurat object
seq_seurat_within_hepato <- CreateSeuratObject(counts = t(mat_hepato), 
                                 project = "liver", 
                                 meta.data = meta_obs,
                                 names.delim = "-")
dim(seq_seurat_within_hepato) # 10095 genes by 2835 cells
seq_seurat_within_hepato@active.ident <- as.factor(seq_seurat_within_hepato$tumor_or_not)
# seq_seurat_within_hepato@active.ident <- as.factor(seq_seurat_within_hepato$tissue)
table(seq_seurat_within_hepato@active.ident)

diff_features_within_hepato <- FindMarkers(seq_seurat_within_hepato,
                                           ident.1 = "tumor_region",
                                           ident.2 = "non_tumor", min.pct = 0)
# diff_features_within_hepato <- FindMarkers(seq_seurat_within_hepato, 
#                                            ident.1 = "tumor", 
#                                            ident.2 = "liver", min.pct = 0)
dim(diff_features_within_hepato)
# 8390 rows
diff_features_within_hepato$p_adj_BH <- p.adjust(diff_features_within_hepato$p_val, 
                                                 method = "BH", 
                                                 n = nrow(diff_features_within_hepato))
sig_markers_within_hepato <- rownames(diff_features_within_hepato[diff_features_within_hepato$p_adj_BH < 0.05, ])
length(sig_markers_within_hepato)
# 322 marker genes

old_tumor_gene <- rownames(diff_features_within_hepato[diff_features_within_hepato$avg_logFC > 0 & 
                                                diff_features_within_hepato$p_adj_BH < 0.05, ])
old_hepato_gene <- rownames(diff_features_within_hepato[diff_features_within_hepato$avg_logFC < 0 & 
                                                 diff_features_within_hepato$p_adj_BH < 0.05, ])
length(old_tumor_gene)
length(old_hepato_gene)
# # old: 102 genes upregulated in tumor regions, 220 genes upregulated in non-tumor regions
@

<<>>=
sum(make.names(old_tumor_gene, allow_ = F) %in% make.names(new_tumor_gene, allow_ = F))
# decont: 29 out of (102 genes upregulate in tumor regions) now upregulate in tumor cells compared to hepatocytes.

make.names(old_tumor_gene, allow_ = F)[which(make.names(old_tumor_gene, allow_ = F) %in% make.names(new_tumor_gene, allow_ = F))]

sum(make.names(old_hepato_gene, allow_ = F) %in% make.names(new_hepato_gene, allow_ = F))
# decont: 171 out of (220 genes which used to upregulate in non-tumor regions) now up-regulate in hepatocytes compared to tumor cells. 

which(make.names(old_hepato_gene, allow_ = F) %in% make.names(new_hepato_gene, allow_ = F))

sum(make.names(new_hepato_gene, allow_ = F) %in% make.names(old_hepato_gene, allow_ = F))

library(VennDiagram)
venn.plot_hepato <- draw.pairwise.venn(area1 = 4283, area2 = 220, cross.area = 171,
                                       cex = 2, cat.cex = 2, cat.pos = c(285, 55), 
                                       # cat.dist = 0.09, ext.pos = 30, ext.dist = -0.05,
                                       cat.just = list(c(-1, -1), c(1, 5)), 
                                       ext.length  = 0.85, ext.line.lwd = 2,
                                       ext.line.lty = "dashed",
                                       category = c("hepatocyte (up)", "non-tumor region (up)"))
png(filename = "./decontam/hepato1.png")
grid.draw(venn.plot_hepato)
dev.off()

venn.plot <- draw.pairwise.venn(area1 = 4114, area2 = 102, cross.area = 29,
                                cex = 2, cat.cex = 2, cat.pos = c(285, 55),
                                cat.dist = 0.09, cat.just = list(c(-1, -1), c(1, 1)),
                                ext.pos = 30, ext.dist = -0.05, ext.length = 0.85,
                                ext.line.lwd = 2, ext.line.lty = "dashed",
                                category = c("tumor (up)", "tumor region (up)"))
png(filename = "./decontam/tumor1.png")
grid.draw(venn.plot)
dev.off()
@

# Volcano plot

<<>>=
diff_features_within_hepato$gene_names <- substring(rownames(diff_features_within_hepato), 6)
diff_features_within_hepato[diff_features_within_hepato$gene_names == "Slc38a3", "gene_names"] <- "Snat3"
diff_features_within_hepato <- diff_features_within_hepato %>%
  mutate(thres = case_when(p_adj_BH < 0.05 ~ "significant",
                           TRUE ~ "non-significant")) %>%
  mutate(coloring = case_when(thres == "non-significant"~ "black",
                              avg_logFC > 0 ~ "red",
                              TRUE ~ "blue")) %>%
  mutate(labeling = case_when(p_adj_BH < 7e-4 & coloring == "red" ~ "1",
                              p_adj_BH < 1e-6 & coloring == "blue" ~ "1", 
                              TRUE ~ "0"))

ggplot(diff_features_within_hepato) +
  geom_point(aes(x = avg_logFC, y = -log10(p_adj_BH)), 
             colour = diff_features_within_hepato$coloring, alpha = 0.5, 
             shape = ifelse(diff_features_within_hepato$labeling == 1, 17, 16)) +
  geom_text_repel(aes(x = avg_logFC, y = -log10(p_adj_BH), 
                      label = ifelse(labeling == 1, gene_names, ""))) +
  ggtitle("Differentially expressed hepatocyte genes in spatial proximity to tumor cells") +
  xlab("log2FC") + 
  ylab("-log10(corrected p-value)") +
  theme_bw()
ggsave("~/Documents/Github/spatial-genomics/fig/contamination/decont_violin.png")
@

\end{document}