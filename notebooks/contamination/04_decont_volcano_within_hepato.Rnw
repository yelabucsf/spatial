\documentclass{article}

\begin{document}

This script performs differential expression analysis using the decontaminated data, between tumor and non-tumor regions in hepatocytes. 

The volcano plot is generated. 

<<package>>=
library(tidyverse)
library(loomR)
library(Seurat)
library(ggrepel)
@

<<data>>=
# rm(list=setdiff(ls(), c("decont_mat", "decont_mat_raw)))
setwd("~/Documents/projects/spatial-genomics")
lfile <- connect(filename = "./data/all_batches_concat.loom", mode = "r+", skip.validate = TRUE)

cell_names <- lfile[["col_attrs/obs_names"]][]
cell_names <- make.names(cell_names, allow_ = F)

cell_types <- lfile[["col_attrs/CellType"]][]
batch <- lfile[["col_attrs/batch"]][]
barcode <- lfile[["col_attrs/barcode"]][]
n_counts <- as.numeric(lfile[["col_attrs/n_counts"]][])

decont_mat <- read.csv("./decontam/decont_mat/decont_mat_after_v2.csv", row.names = 1)
dim(decont_mat) # 55287 genes, 10280 cells (the 59 contaminated genes were removed)
cells_decont <- colnames(decont_mat)
cells_decont <- make.names(cells_decont, allow_ = F)
# sum(cell_names == cells_decont) # 10280
gene_names <- rownames(decont_mat)
raw_obs <- as.data.frame(cbind(barcode, cell_names, cell_types, batch, n_counts))
@

<<>>=
# map (X, Y) coordinates
plate23_map <- read.csv("./data/plate23_map.csv", header=FALSE)
colnames(plate23_map) <- c("barcode", "X", "Y")
obs_xy <- merge(raw_obs, plate23_map, by = "barcode")
obs_xy$Y_hex <- obs_xy$Y - (obs_xy$X %% 2) / 2
obs_xy$location <- paste0(obs_xy$batch, "_", obs_xy$X, "_", obs_xy$Y_hex)
# filter the gene expression data
mat_filter_raw <- decont_mat[grep("mm10", rownames(decont_mat)), ]
dim(mat_filter_raw) # 24917 genes by 10280 cells
mat_filter <- mat_filter_raw[which(rowSums(mat_filter_raw) != 0), which(colSums(mat_filter_raw) != 0)]
dim(mat_filter) # 23554 genes by 10276 cells

# filtering genes with larger than 100 counts in target cells (hepatocytes in all the regions)

# identify tumor and hepatocyte cells in all the regions
target_cell <- raw_obs[raw_obs$cell_types == "Hepatocyte", "cell_names"]
length(target_cell) # 2835 hepatocytes

gene_to_filter <- rowSums(mat_filter[, colnames(mat_filter) %in% target_cell]) >= 101
sum(gene_to_filter) # 4562 genes

mat_genefilter <- mat_filter[which(gene_to_filter), ] # 4562 genes by 10276 cells
dim(mat_genefilter)

# removed 3 cells with zero gene transcripts after filtering
# note that none of them are either mc38 or hepatocytes, and downstream analysis was not affected. 
mat_gene_filter_new <- mat_genefilter[, which(colSums(mat_genefilter) != 0)]
dim(mat_gene_filter_new) # 4562 genes by 10261 cells
# # normalize gene expression data
# # multiplied each entry by (median / current_sum) so that the sum across the row is equal to the median.
med_sum <- median(colSums(mat_gene_filter_new)) # 391.2628
mat_normalized_t <- apply(mat_gene_filter_new, 2, function(i) i * med_sum / sum(i))
mat_normalized <- t(mat_normalized_t)
dim(mat_normalized) # 10273 cells by 4562 genes
range(rowSums(mat_normalized))

rm(mat_normalized_t, mat_filter, mat_filter_raw, plate23_map)
dim(mat_normalized) # 10276 cells by 10095 genes (normalized across all the cells)

mat_hepato <- mat_normalized[rownames(mat_normalized) %in% target_cell, ]
dim(mat_hepato) # 2835 hepatocyte cells in all the regions, by 4562 genes
@

# Differential expression analysis of hepatocytes between tumor and non-tumor regions. 

<<>>=
well_xy <- as.data.frame(unique(cbind(obs_xy$batch, obs_xy$X, obs_xy$Y, 
                                      obs_xy$Y_hex, obs_xy$location)))
colnames(well_xy) <- c("batch", "X", "Y", "Y_hex", "location")
nrow(well_xy) # 2029 unique wells
length(unique(obs_xy$location))

well_xy$perc_tumor <- rep(NA, nrow(well_xy))
for(i in 1:nrow(well_xy)){ # for each well
  # find all the six neighboring well, if any
  seven_well_loc <- c(paste0(well_xy[i, "batch"], "_", well_xy[i, "X"], "_", 
                             well_xy[i, "Y_hex"]), 
                      paste0(well_xy[i, "batch"], "_", well_xy[i, "X"], "_", 
                             (as.numeric(well_xy[i, "Y_hex"]) + 1)),
                      paste0(well_xy[i, "batch"], "_", well_xy[i, "X"], "_", 
                             as.numeric(well_xy[i, "Y_hex"]) - 1), 
                      paste0(well_xy[i, "batch"], "_", 
                             as.numeric(well_xy[i, "X"]) + 1, "_", 
                             as.numeric(well_xy[i, "Y_hex"]) + 1/2),
                      paste0(well_xy[i, "batch"], "_", 
                             as.numeric(well_xy[i, "X"]) + 1, "_", 
                             as.numeric(well_xy[i, "Y_hex"]) - 1/2),
                      paste0(well_xy[i, "batch"], "_", 
                             as.numeric(well_xy[i, "X"]) - 1, "_", 
                             as.numeric(well_xy[i, "Y_hex"]) + 1/2),
                      paste0(well_xy[i, "batch"], "_", 
                             as.numeric(well_xy[i, "X"]) - 1, "_", 
                             as.numeric(well_xy[i, "Y_hex"]) - 1/2))
  # count the total number of cells, and tumor cells
  seven_well_cell_types <- obs_xy[obs_xy$location %in% seven_well_loc, "cell_types"]
  # calculate the tumor percent, and decide whether this well is in the tumor region
  well_xy[i, "perc_tumor"] <- sum(seven_well_cell_types == "mc38") / length(seven_well_cell_types) 
}

summary(well_xy$perc_tumor)

obs_xy_label <- obs_xy %>%
  left_join(well_xy[, c("location", "perc_tumor")], by = "location")

meta_obs <- obs_xy_label[obs_xy_label$cell_names %in% rownames(mat_hepato), ]
dim(meta_obs)
summary(meta_obs[, "perc_tumor"])
perc_tumor_thres <- mean(meta_obs[, "perc_tumor"])
meta_obs <- meta_obs %>%
  mutate(tumor_or_not = case_when(perc_tumor > perc_tumor_thres ~ "tumor_region",
                                  TRUE ~ "non_tumor")) %>%
  dplyr::slice(match(rownames(mat_hepato), cell_names))
table(meta_obs$tumor_or_not)
rownames(meta_obs) <- meta_obs$cell_names
@

<<wilcoxon-by-hand>>=
dim(mat_hepato) # 2835 cells by 10095 genes

p_val <- rep(NA, ncol(mat_hepato))
log2_fc <- rep(NA, ncol(mat_hepato))
for(gene_j in 1:ncol(mat_hepato)){
  wilcox_df <- data.frame(region = meta_obs$tumor_or_not,
                          type = ifelse(meta_obs$tumor_or_not == "tumor_region", 1, 0),
                          expression = mat_hepato[, gene_j])
  wilcox_result <- wilcox.test(expression ~ type, wilcox_df)
  p_val[gene_j] <- wilcox_result$p.value
  numer <- mean(wilcox_df[wilcox_df$region == "tumor_region", "expression"])
  denom <-mean(wilcox_df[wilcox_df$region == "non_tumor", "expression"])
  log2_fc[gene_j] <- log2(numer / denom)
}

q_val <- p.adjust(p_val, method = "BH", n = length(p_val))
 
de_df <- data.frame(gene_names = substring(colnames(mat_hepato), 6),
                    Pval = p_val,
                    Qval = q_val,
                    log2fc = log2_fc)
dim(de_df)
sum((de_df$log2fc == 0))
sum(de_df$Qval < 0.05)

de_df[de_df$gene_names == "Slc38a3", "gene_names"] <- "Snat3"

de_df_new <- de_df[order(de_df$Qval), ] %>%
  mutate(thres = case_when(Qval < 0.05 ~ "significant",
                           TRUE ~ "non-significant")) %>%
  mutate(coloring = case_when(thres == "non-significant"~ "black",
                              log2fc > 0 ~ "red",
                              TRUE ~ "blue")) %>%
  mutate(labeling = case_when(Qval < 5e-4 & coloring == "red" ~ "1",
                              Qval < 1e-7 & coloring == "blue" ~ "1", 
                              TRUE ~ "0"))
sum(de_df_new$thres == "significant") # 401 marker genes
write.csv(de_df_new, file = "~/Documents/Github/spatial-genomics/data/de_genes_within_hepato/decont_within_hepato_401marker_genes.csv")

plot_df <- de_df_new 
ggplot(plot_df) +
  geom_jitter(aes(x = log2fc, y = -log10(Qval)), 
             colour = plot_df$coloring, alpha = 0.5, 
             shape = ifelse(plot_df$labeling == 1, 17, 16)) +
  geom_text_repel(aes(x = log2fc, y = -log10(Qval), 
                      label = ifelse(labeling == 1, gene_names, ""))) +
  ggtitle("Differentially expressed hepatocyte genes in spatial proximity to tumor cells") +
  xlab("log2FC") + 
  ylab("-log10(corrected p-value)") +
  theme_classic()
ggsave("~/Documents/Github/spatial-genomics/fig/contamination/final/decont_volcano_oct14.png")
ggsave("~/Documents/Github/spatial-genomics/fig/contamination/final/decont_volcano_oct14.svg")
@

\end{document}